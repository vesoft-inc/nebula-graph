Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expr
Rule 1     expr -> EMPTY
Rule 2     expr -> NULL
Rule 3     expr -> NaN
Rule 4     expr -> BAD_DATA
Rule 5     expr -> BAD_TYPE
Rule 6     expr -> OVERFLOW
Rule 7     expr -> UNKNOWN_PROP
Rule 8     expr -> DIV_BY_ZERO
Rule 9     expr -> OUT_OF_RANGE
Rule 10    expr -> INT
Rule 11    expr -> FLOAT
Rule 12    expr -> BOOLEAN
Rule 13    expr -> STRING
Rule 14    expr -> list
Rule 15    expr -> set
Rule 16    expr -> map
Rule 17    expr -> vertex
Rule 18    expr -> edge
Rule 19    expr -> path
Rule 20    expr -> function
Rule 21    list -> [ list_items ]
Rule 22    list -> [ ]
Rule 23    set -> { list_items }
Rule 24    list_items -> expr
Rule 25    list_items -> list_items , expr
Rule 26    map -> { map_items }
Rule 27    map -> { }
Rule 28    map_items -> LABEL : expr
Rule 29    map_items -> STRING : expr
Rule 30    map_items -> map_items , LABEL : expr
Rule 31    map_items -> map_items , STRING : expr
Rule 32    vertex -> ( tag_list )
Rule 33    vertex -> ( STRING tag_list )
Rule 34    tag_list -> <empty>
Rule 35    tag_list -> tag_list tag
Rule 36    tag -> : LABEL map
Rule 37    tag -> : LABEL
Rule 38    edge -> - edge_spec - >
Rule 39    edge -> < - edge_spec -
Rule 40    edge_spec -> <empty>
Rule 41    edge_spec -> [ edge_rank edge_props ]
Rule 42    edge_spec -> [ : LABEL edge_rank edge_props ]
Rule 43    edge_spec -> [ STRING - > STRING edge_rank edge_props ]
Rule 44    edge_spec -> [ : LABEL STRING - > STRING edge_rank edge_props ]
Rule 45    edge_rank -> <empty>
Rule 46    edge_rank -> @ INT
Rule 47    edge_props -> <empty>
Rule 48    edge_props -> map
Rule 49    path -> < vertex steps >
Rule 50    path -> < vertex >
Rule 51    steps -> edge vertex
Rule 52    steps -> steps edge vertex
Rule 53    function -> LABEL ( list_items )

Terminals, with rules where they appear

(                    : 32 33 53
)                    : 32 33 53
,                    : 25 30 31
-                    : 38 38 39 39 43 44
:                    : 28 29 30 31 36 37 42 44
<                    : 39 49 50
>                    : 38 43 44 49 50
@                    : 46
BAD_DATA             : 4
BAD_TYPE             : 5
BOOLEAN              : 12
DIV_BY_ZERO          : 8
EMPTY                : 1
FLOAT                : 11
INT                  : 10 46
LABEL                : 28 30 36 37 42 44 53
NULL                 : 2
NaN                  : 3
OUT_OF_RANGE         : 9
OVERFLOW             : 6
STRING               : 13 29 31 33 43 43 44 44
UNKNOWN_PROP         : 7
[                    : 21 22 41 42 43 44
]                    : 21 22 41 42 43 44
error                : 
{                    : 23 26 27
}                    : 23 26 27

Nonterminals, with rules where they appear

edge                 : 18 51 52
edge_props           : 41 42 43 44
edge_rank            : 41 42 43 44
edge_spec            : 38 39
expr                 : 24 25 28 29 30 31 0
function             : 20
list                 : 14
list_items           : 21 23 25 53
map                  : 16 36 48
map_items            : 26 30 31
path                 : 19
set                  : 15
steps                : 49 52
tag                  : 35
tag_list             : 32 33 35
vertex               : 17 49 50 51 52

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 1
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 1

    (0) S' -> expr .



state 2

    (1) expr -> EMPTY .

    $end            reduce using rule 1 (expr -> EMPTY .)
    ]               reduce using rule 1 (expr -> EMPTY .)
    ,               reduce using rule 1 (expr -> EMPTY .)
    }               reduce using rule 1 (expr -> EMPTY .)
    )               reduce using rule 1 (expr -> EMPTY .)


state 3

    (2) expr -> NULL .

    $end            reduce using rule 2 (expr -> NULL .)
    ]               reduce using rule 2 (expr -> NULL .)
    ,               reduce using rule 2 (expr -> NULL .)
    }               reduce using rule 2 (expr -> NULL .)
    )               reduce using rule 2 (expr -> NULL .)


state 4

    (3) expr -> NaN .

    $end            reduce using rule 3 (expr -> NaN .)
    ]               reduce using rule 3 (expr -> NaN .)
    ,               reduce using rule 3 (expr -> NaN .)
    }               reduce using rule 3 (expr -> NaN .)
    )               reduce using rule 3 (expr -> NaN .)


state 5

    (4) expr -> BAD_DATA .

    $end            reduce using rule 4 (expr -> BAD_DATA .)
    ]               reduce using rule 4 (expr -> BAD_DATA .)
    ,               reduce using rule 4 (expr -> BAD_DATA .)
    }               reduce using rule 4 (expr -> BAD_DATA .)
    )               reduce using rule 4 (expr -> BAD_DATA .)


state 6

    (5) expr -> BAD_TYPE .

    $end            reduce using rule 5 (expr -> BAD_TYPE .)
    ]               reduce using rule 5 (expr -> BAD_TYPE .)
    ,               reduce using rule 5 (expr -> BAD_TYPE .)
    }               reduce using rule 5 (expr -> BAD_TYPE .)
    )               reduce using rule 5 (expr -> BAD_TYPE .)


state 7

    (6) expr -> OVERFLOW .

    $end            reduce using rule 6 (expr -> OVERFLOW .)
    ]               reduce using rule 6 (expr -> OVERFLOW .)
    ,               reduce using rule 6 (expr -> OVERFLOW .)
    }               reduce using rule 6 (expr -> OVERFLOW .)
    )               reduce using rule 6 (expr -> OVERFLOW .)


state 8

    (7) expr -> UNKNOWN_PROP .

    $end            reduce using rule 7 (expr -> UNKNOWN_PROP .)
    ]               reduce using rule 7 (expr -> UNKNOWN_PROP .)
    ,               reduce using rule 7 (expr -> UNKNOWN_PROP .)
    }               reduce using rule 7 (expr -> UNKNOWN_PROP .)
    )               reduce using rule 7 (expr -> UNKNOWN_PROP .)


state 9

    (8) expr -> DIV_BY_ZERO .

    $end            reduce using rule 8 (expr -> DIV_BY_ZERO .)
    ]               reduce using rule 8 (expr -> DIV_BY_ZERO .)
    ,               reduce using rule 8 (expr -> DIV_BY_ZERO .)
    }               reduce using rule 8 (expr -> DIV_BY_ZERO .)
    )               reduce using rule 8 (expr -> DIV_BY_ZERO .)


state 10

    (9) expr -> OUT_OF_RANGE .

    $end            reduce using rule 9 (expr -> OUT_OF_RANGE .)
    ]               reduce using rule 9 (expr -> OUT_OF_RANGE .)
    ,               reduce using rule 9 (expr -> OUT_OF_RANGE .)
    }               reduce using rule 9 (expr -> OUT_OF_RANGE .)
    )               reduce using rule 9 (expr -> OUT_OF_RANGE .)


state 11

    (10) expr -> INT .

    $end            reduce using rule 10 (expr -> INT .)
    ]               reduce using rule 10 (expr -> INT .)
    ,               reduce using rule 10 (expr -> INT .)
    }               reduce using rule 10 (expr -> INT .)
    )               reduce using rule 10 (expr -> INT .)


state 12

    (11) expr -> FLOAT .

    $end            reduce using rule 11 (expr -> FLOAT .)
    ]               reduce using rule 11 (expr -> FLOAT .)
    ,               reduce using rule 11 (expr -> FLOAT .)
    }               reduce using rule 11 (expr -> FLOAT .)
    )               reduce using rule 11 (expr -> FLOAT .)


state 13

    (12) expr -> BOOLEAN .

    $end            reduce using rule 12 (expr -> BOOLEAN .)
    ]               reduce using rule 12 (expr -> BOOLEAN .)
    ,               reduce using rule 12 (expr -> BOOLEAN .)
    }               reduce using rule 12 (expr -> BOOLEAN .)
    )               reduce using rule 12 (expr -> BOOLEAN .)


state 14

    (13) expr -> STRING .

    $end            reduce using rule 13 (expr -> STRING .)
    ]               reduce using rule 13 (expr -> STRING .)
    ,               reduce using rule 13 (expr -> STRING .)
    )               reduce using rule 13 (expr -> STRING .)
    }               reduce using rule 13 (expr -> STRING .)


state 15

    (14) expr -> list .

    $end            reduce using rule 14 (expr -> list .)
    ]               reduce using rule 14 (expr -> list .)
    ,               reduce using rule 14 (expr -> list .)
    }               reduce using rule 14 (expr -> list .)
    )               reduce using rule 14 (expr -> list .)


state 16

    (15) expr -> set .

    $end            reduce using rule 15 (expr -> set .)
    ]               reduce using rule 15 (expr -> set .)
    ,               reduce using rule 15 (expr -> set .)
    }               reduce using rule 15 (expr -> set .)
    )               reduce using rule 15 (expr -> set .)


state 17

    (16) expr -> map .

    $end            reduce using rule 16 (expr -> map .)
    ]               reduce using rule 16 (expr -> map .)
    ,               reduce using rule 16 (expr -> map .)
    }               reduce using rule 16 (expr -> map .)
    )               reduce using rule 16 (expr -> map .)


state 18

    (17) expr -> vertex .

    $end            reduce using rule 17 (expr -> vertex .)
    ]               reduce using rule 17 (expr -> vertex .)
    ,               reduce using rule 17 (expr -> vertex .)
    }               reduce using rule 17 (expr -> vertex .)
    )               reduce using rule 17 (expr -> vertex .)


state 19

    (18) expr -> edge .

    $end            reduce using rule 18 (expr -> edge .)
    ]               reduce using rule 18 (expr -> edge .)
    ,               reduce using rule 18 (expr -> edge .)
    }               reduce using rule 18 (expr -> edge .)
    )               reduce using rule 18 (expr -> edge .)


state 20

    (19) expr -> path .

    $end            reduce using rule 19 (expr -> path .)
    ]               reduce using rule 19 (expr -> path .)
    ,               reduce using rule 19 (expr -> path .)
    }               reduce using rule 19 (expr -> path .)
    )               reduce using rule 19 (expr -> path .)


state 21

    (20) expr -> function .

    $end            reduce using rule 20 (expr -> function .)
    ]               reduce using rule 20 (expr -> function .)
    ,               reduce using rule 20 (expr -> function .)
    }               reduce using rule 20 (expr -> function .)
    )               reduce using rule 20 (expr -> function .)


state 22

    (21) list -> [ . list_items ]
    (22) list -> [ . ]
    (24) list_items -> . expr
    (25) list_items -> . list_items , expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    ]               shift and go to state 29
    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    list_items                     shift and go to state 28
    expr                           shift and go to state 30
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 23

    (23) set -> { . list_items }
    (26) map -> { . map_items }
    (27) map -> { . }
    (24) list_items -> . expr
    (25) list_items -> . list_items , expr
    (28) map_items -> . LABEL : expr
    (29) map_items -> . STRING : expr
    (30) map_items -> . map_items , LABEL : expr
    (31) map_items -> . map_items , STRING : expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    }               shift and go to state 32
    LABEL           shift and go to state 34
    STRING          shift and go to state 35
    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26

    list_items                     shift and go to state 31
    map_items                      shift and go to state 33
    expr                           shift and go to state 30
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 24

    (32) vertex -> ( . tag_list )
    (33) vertex -> ( . STRING tag_list )
    (34) tag_list -> .
    (35) tag_list -> . tag_list tag

    STRING          shift and go to state 37
    )               reduce using rule 34 (tag_list -> .)
    :               reduce using rule 34 (tag_list -> .)

    tag_list                       shift and go to state 36

state 25

    (38) edge -> - . edge_spec - >
    (40) edge_spec -> .
    (41) edge_spec -> . [ edge_rank edge_props ]
    (42) edge_spec -> . [ : LABEL edge_rank edge_props ]
    (43) edge_spec -> . [ STRING - > STRING edge_rank edge_props ]
    (44) edge_spec -> . [ : LABEL STRING - > STRING edge_rank edge_props ]

    -               reduce using rule 40 (edge_spec -> .)
    [               shift and go to state 39

    edge_spec                      shift and go to state 38

state 26

    (39) edge -> < . - edge_spec -
    (49) path -> < . vertex steps >
    (50) path -> < . vertex >
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )

    -               shift and go to state 40
    (               shift and go to state 24

    vertex                         shift and go to state 41

state 27

    (53) function -> LABEL . ( list_items )

    (               shift and go to state 42


state 28

    (21) list -> [ list_items . ]
    (25) list_items -> list_items . , expr

    ]               shift and go to state 43
    ,               shift and go to state 44


state 29

    (22) list -> [ ] .

    $end            reduce using rule 22 (list -> [ ] .)
    ]               reduce using rule 22 (list -> [ ] .)
    ,               reduce using rule 22 (list -> [ ] .)
    }               reduce using rule 22 (list -> [ ] .)
    )               reduce using rule 22 (list -> [ ] .)


state 30

    (24) list_items -> expr .

    ]               reduce using rule 24 (list_items -> expr .)
    ,               reduce using rule 24 (list_items -> expr .)
    }               reduce using rule 24 (list_items -> expr .)
    )               reduce using rule 24 (list_items -> expr .)


state 31

    (23) set -> { list_items . }
    (25) list_items -> list_items . , expr

    }               shift and go to state 45
    ,               shift and go to state 44


state 32

    (27) map -> { } .

    $end            reduce using rule 27 (map -> { } .)
    ]               reduce using rule 27 (map -> { } .)
    ,               reduce using rule 27 (map -> { } .)
    }               reduce using rule 27 (map -> { } .)
    )               reduce using rule 27 (map -> { } .)
    :               reduce using rule 27 (map -> { } .)


state 33

    (26) map -> { map_items . }
    (30) map_items -> map_items . , LABEL : expr
    (31) map_items -> map_items . , STRING : expr

    }               shift and go to state 46
    ,               shift and go to state 47


state 34

    (28) map_items -> LABEL . : expr
    (53) function -> LABEL . ( list_items )

    :               shift and go to state 48
    (               shift and go to state 42


state 35

    (29) map_items -> STRING . : expr
    (13) expr -> STRING .

    :               shift and go to state 49
    }               reduce using rule 13 (expr -> STRING .)
    ,               reduce using rule 13 (expr -> STRING .)


state 36

    (32) vertex -> ( tag_list . )
    (35) tag_list -> tag_list . tag
    (36) tag -> . : LABEL map
    (37) tag -> . : LABEL

    )               shift and go to state 50
    :               shift and go to state 52

    tag                            shift and go to state 51

state 37

    (33) vertex -> ( STRING . tag_list )
    (34) tag_list -> .
    (35) tag_list -> . tag_list tag

    )               reduce using rule 34 (tag_list -> .)
    :               reduce using rule 34 (tag_list -> .)

    tag_list                       shift and go to state 53

state 38

    (38) edge -> - edge_spec . - >

    -               shift and go to state 54


state 39

    (41) edge_spec -> [ . edge_rank edge_props ]
    (42) edge_spec -> [ . : LABEL edge_rank edge_props ]
    (43) edge_spec -> [ . STRING - > STRING edge_rank edge_props ]
    (44) edge_spec -> [ . : LABEL STRING - > STRING edge_rank edge_props ]
    (45) edge_rank -> .
    (46) edge_rank -> . @ INT

    :               shift and go to state 56
    STRING          shift and go to state 57
    {               reduce using rule 45 (edge_rank -> .)
    ]               reduce using rule 45 (edge_rank -> .)
    @               shift and go to state 58

    edge_rank                      shift and go to state 55

state 40

    (39) edge -> < - . edge_spec -
    (40) edge_spec -> .
    (41) edge_spec -> . [ edge_rank edge_props ]
    (42) edge_spec -> . [ : LABEL edge_rank edge_props ]
    (43) edge_spec -> . [ STRING - > STRING edge_rank edge_props ]
    (44) edge_spec -> . [ : LABEL STRING - > STRING edge_rank edge_props ]

    -               reduce using rule 40 (edge_spec -> .)
    [               shift and go to state 39

    edge_spec                      shift and go to state 59

state 41

    (49) path -> < vertex . steps >
    (50) path -> < vertex . >
    (51) steps -> . edge vertex
    (52) steps -> . steps edge vertex
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -

    >               shift and go to state 62
    -               shift and go to state 25
    <               shift and go to state 60

    steps                          shift and go to state 61
    edge                           shift and go to state 63

state 42

    (53) function -> LABEL ( . list_items )
    (24) list_items -> . expr
    (25) list_items -> . list_items , expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    list_items                     shift and go to state 64
    expr                           shift and go to state 30
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 43

    (21) list -> [ list_items ] .

    $end            reduce using rule 21 (list -> [ list_items ] .)
    ]               reduce using rule 21 (list -> [ list_items ] .)
    ,               reduce using rule 21 (list -> [ list_items ] .)
    }               reduce using rule 21 (list -> [ list_items ] .)
    )               reduce using rule 21 (list -> [ list_items ] .)


state 44

    (25) list_items -> list_items , . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 65
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 45

    (23) set -> { list_items } .

    $end            reduce using rule 23 (set -> { list_items } .)
    ]               reduce using rule 23 (set -> { list_items } .)
    ,               reduce using rule 23 (set -> { list_items } .)
    }               reduce using rule 23 (set -> { list_items } .)
    )               reduce using rule 23 (set -> { list_items } .)


state 46

    (26) map -> { map_items } .

    $end            reduce using rule 26 (map -> { map_items } .)
    ]               reduce using rule 26 (map -> { map_items } .)
    ,               reduce using rule 26 (map -> { map_items } .)
    }               reduce using rule 26 (map -> { map_items } .)
    )               reduce using rule 26 (map -> { map_items } .)
    :               reduce using rule 26 (map -> { map_items } .)


state 47

    (30) map_items -> map_items , . LABEL : expr
    (31) map_items -> map_items , . STRING : expr

    LABEL           shift and go to state 66
    STRING          shift and go to state 67


state 48

    (28) map_items -> LABEL : . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 68
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 49

    (29) map_items -> STRING : . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 69
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 50

    (32) vertex -> ( tag_list ) .

    $end            reduce using rule 32 (vertex -> ( tag_list ) .)
    ]               reduce using rule 32 (vertex -> ( tag_list ) .)
    ,               reduce using rule 32 (vertex -> ( tag_list ) .)
    }               reduce using rule 32 (vertex -> ( tag_list ) .)
    >               reduce using rule 32 (vertex -> ( tag_list ) .)
    -               reduce using rule 32 (vertex -> ( tag_list ) .)
    <               reduce using rule 32 (vertex -> ( tag_list ) .)
    )               reduce using rule 32 (vertex -> ( tag_list ) .)


state 51

    (35) tag_list -> tag_list tag .

    )               reduce using rule 35 (tag_list -> tag_list tag .)
    :               reduce using rule 35 (tag_list -> tag_list tag .)


state 52

    (36) tag -> : . LABEL map
    (37) tag -> : . LABEL

    LABEL           shift and go to state 70


state 53

    (33) vertex -> ( STRING tag_list . )
    (35) tag_list -> tag_list . tag
    (36) tag -> . : LABEL map
    (37) tag -> . : LABEL

    )               shift and go to state 71
    :               shift and go to state 52

    tag                            shift and go to state 51

state 54

    (38) edge -> - edge_spec - . >

    >               shift and go to state 72


state 55

    (41) edge_spec -> [ edge_rank . edge_props ]
    (47) edge_props -> .
    (48) edge_props -> . map
    (26) map -> . { map_items }
    (27) map -> . { }

    ]               reduce using rule 47 (edge_props -> .)
    {               shift and go to state 75

    edge_props                     shift and go to state 73
    map                            shift and go to state 74

state 56

    (42) edge_spec -> [ : . LABEL edge_rank edge_props ]
    (44) edge_spec -> [ : . LABEL STRING - > STRING edge_rank edge_props ]

    LABEL           shift and go to state 76


state 57

    (43) edge_spec -> [ STRING . - > STRING edge_rank edge_props ]

    -               shift and go to state 77


state 58

    (46) edge_rank -> @ . INT

    INT             shift and go to state 78


state 59

    (39) edge -> < - edge_spec . -

    -               shift and go to state 79


state 60

    (39) edge -> < . - edge_spec -

    -               shift and go to state 40


state 61

    (49) path -> < vertex steps . >
    (52) steps -> steps . edge vertex
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -

    >               shift and go to state 80
    -               shift and go to state 25
    <               shift and go to state 60

    edge                           shift and go to state 81

state 62

    (50) path -> < vertex > .

    $end            reduce using rule 50 (path -> < vertex > .)
    ]               reduce using rule 50 (path -> < vertex > .)
    ,               reduce using rule 50 (path -> < vertex > .)
    }               reduce using rule 50 (path -> < vertex > .)
    )               reduce using rule 50 (path -> < vertex > .)


state 63

    (51) steps -> edge . vertex
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )

    (               shift and go to state 24

    vertex                         shift and go to state 82

state 64

    (53) function -> LABEL ( list_items . )
    (25) list_items -> list_items . , expr

    )               shift and go to state 83
    ,               shift and go to state 44


state 65

    (25) list_items -> list_items , expr .

    ]               reduce using rule 25 (list_items -> list_items , expr .)
    ,               reduce using rule 25 (list_items -> list_items , expr .)
    }               reduce using rule 25 (list_items -> list_items , expr .)
    )               reduce using rule 25 (list_items -> list_items , expr .)


state 66

    (30) map_items -> map_items , LABEL . : expr

    :               shift and go to state 84


state 67

    (31) map_items -> map_items , STRING . : expr

    :               shift and go to state 85


state 68

    (28) map_items -> LABEL : expr .

    }               reduce using rule 28 (map_items -> LABEL : expr .)
    ,               reduce using rule 28 (map_items -> LABEL : expr .)


state 69

    (29) map_items -> STRING : expr .

    }               reduce using rule 29 (map_items -> STRING : expr .)
    ,               reduce using rule 29 (map_items -> STRING : expr .)


state 70

    (36) tag -> : LABEL . map
    (37) tag -> : LABEL .
    (26) map -> . { map_items }
    (27) map -> . { }

    )               reduce using rule 37 (tag -> : LABEL .)
    :               reduce using rule 37 (tag -> : LABEL .)
    {               shift and go to state 75

    map                            shift and go to state 86

state 71

    (33) vertex -> ( STRING tag_list ) .

    $end            reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    ]               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    ,               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    }               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    >               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    -               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    <               reduce using rule 33 (vertex -> ( STRING tag_list ) .)
    )               reduce using rule 33 (vertex -> ( STRING tag_list ) .)


state 72

    (38) edge -> - edge_spec - > .

    $end            reduce using rule 38 (edge -> - edge_spec - > .)
    ]               reduce using rule 38 (edge -> - edge_spec - > .)
    ,               reduce using rule 38 (edge -> - edge_spec - > .)
    }               reduce using rule 38 (edge -> - edge_spec - > .)
    (               reduce using rule 38 (edge -> - edge_spec - > .)
    )               reduce using rule 38 (edge -> - edge_spec - > .)


state 73

    (41) edge_spec -> [ edge_rank edge_props . ]

    ]               shift and go to state 87


state 74

    (48) edge_props -> map .

    ]               reduce using rule 48 (edge_props -> map .)


state 75

    (26) map -> { . map_items }
    (27) map -> { . }
    (28) map_items -> . LABEL : expr
    (29) map_items -> . STRING : expr
    (30) map_items -> . map_items , LABEL : expr
    (31) map_items -> . map_items , STRING : expr

    }               shift and go to state 32
    LABEL           shift and go to state 88
    STRING          shift and go to state 89

    map_items                      shift and go to state 33

state 76

    (42) edge_spec -> [ : LABEL . edge_rank edge_props ]
    (44) edge_spec -> [ : LABEL . STRING - > STRING edge_rank edge_props ]
    (45) edge_rank -> .
    (46) edge_rank -> . @ INT

    STRING          shift and go to state 91
    {               reduce using rule 45 (edge_rank -> .)
    ]               reduce using rule 45 (edge_rank -> .)
    @               shift and go to state 58

    edge_rank                      shift and go to state 90

state 77

    (43) edge_spec -> [ STRING - . > STRING edge_rank edge_props ]

    >               shift and go to state 92


state 78

    (46) edge_rank -> @ INT .

    {               reduce using rule 46 (edge_rank -> @ INT .)
    ]               reduce using rule 46 (edge_rank -> @ INT .)


state 79

    (39) edge -> < - edge_spec - .

    $end            reduce using rule 39 (edge -> < - edge_spec - .)
    ]               reduce using rule 39 (edge -> < - edge_spec - .)
    ,               reduce using rule 39 (edge -> < - edge_spec - .)
    }               reduce using rule 39 (edge -> < - edge_spec - .)
    (               reduce using rule 39 (edge -> < - edge_spec - .)
    )               reduce using rule 39 (edge -> < - edge_spec - .)


state 80

    (49) path -> < vertex steps > .

    $end            reduce using rule 49 (path -> < vertex steps > .)
    ]               reduce using rule 49 (path -> < vertex steps > .)
    ,               reduce using rule 49 (path -> < vertex steps > .)
    }               reduce using rule 49 (path -> < vertex steps > .)
    )               reduce using rule 49 (path -> < vertex steps > .)


state 81

    (52) steps -> steps edge . vertex
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )

    (               shift and go to state 24

    vertex                         shift and go to state 93

state 82

    (51) steps -> edge vertex .

    >               reduce using rule 51 (steps -> edge vertex .)
    -               reduce using rule 51 (steps -> edge vertex .)
    <               reduce using rule 51 (steps -> edge vertex .)


state 83

    (53) function -> LABEL ( list_items ) .

    $end            reduce using rule 53 (function -> LABEL ( list_items ) .)
    ]               reduce using rule 53 (function -> LABEL ( list_items ) .)
    ,               reduce using rule 53 (function -> LABEL ( list_items ) .)
    }               reduce using rule 53 (function -> LABEL ( list_items ) .)
    )               reduce using rule 53 (function -> LABEL ( list_items ) .)


state 84

    (30) map_items -> map_items , LABEL : . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 94
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 85

    (31) map_items -> map_items , STRING : . expr
    (1) expr -> . EMPTY
    (2) expr -> . NULL
    (3) expr -> . NaN
    (4) expr -> . BAD_DATA
    (5) expr -> . BAD_TYPE
    (6) expr -> . OVERFLOW
    (7) expr -> . UNKNOWN_PROP
    (8) expr -> . DIV_BY_ZERO
    (9) expr -> . OUT_OF_RANGE
    (10) expr -> . INT
    (11) expr -> . FLOAT
    (12) expr -> . BOOLEAN
    (13) expr -> . STRING
    (14) expr -> . list
    (15) expr -> . set
    (16) expr -> . map
    (17) expr -> . vertex
    (18) expr -> . edge
    (19) expr -> . path
    (20) expr -> . function
    (21) list -> . [ list_items ]
    (22) list -> . [ ]
    (23) set -> . { list_items }
    (26) map -> . { map_items }
    (27) map -> . { }
    (32) vertex -> . ( tag_list )
    (33) vertex -> . ( STRING tag_list )
    (38) edge -> . - edge_spec - >
    (39) edge -> . < - edge_spec -
    (49) path -> . < vertex steps >
    (50) path -> . < vertex >
    (53) function -> . LABEL ( list_items )

    EMPTY           shift and go to state 2
    NULL            shift and go to state 3
    NaN             shift and go to state 4
    BAD_DATA        shift and go to state 5
    BAD_TYPE        shift and go to state 6
    OVERFLOW        shift and go to state 7
    UNKNOWN_PROP    shift and go to state 8
    DIV_BY_ZERO     shift and go to state 9
    OUT_OF_RANGE    shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 14
    [               shift and go to state 22
    {               shift and go to state 23
    (               shift and go to state 24
    -               shift and go to state 25
    <               shift and go to state 26
    LABEL           shift and go to state 27

    expr                           shift and go to state 95
    list                           shift and go to state 15
    set                            shift and go to state 16
    map                            shift and go to state 17
    vertex                         shift and go to state 18
    edge                           shift and go to state 19
    path                           shift and go to state 20
    function                       shift and go to state 21

state 86

    (36) tag -> : LABEL map .

    )               reduce using rule 36 (tag -> : LABEL map .)
    :               reduce using rule 36 (tag -> : LABEL map .)


state 87

    (41) edge_spec -> [ edge_rank edge_props ] .

    -               reduce using rule 41 (edge_spec -> [ edge_rank edge_props ] .)


state 88

    (28) map_items -> LABEL . : expr

    :               shift and go to state 48


state 89

    (29) map_items -> STRING . : expr

    :               shift and go to state 49


state 90

    (42) edge_spec -> [ : LABEL edge_rank . edge_props ]
    (47) edge_props -> .
    (48) edge_props -> . map
    (26) map -> . { map_items }
    (27) map -> . { }

    ]               reduce using rule 47 (edge_props -> .)
    {               shift and go to state 75

    edge_props                     shift and go to state 96
    map                            shift and go to state 74

state 91

    (44) edge_spec -> [ : LABEL STRING . - > STRING edge_rank edge_props ]

    -               shift and go to state 97


state 92

    (43) edge_spec -> [ STRING - > . STRING edge_rank edge_props ]

    STRING          shift and go to state 98


state 93

    (52) steps -> steps edge vertex .

    >               reduce using rule 52 (steps -> steps edge vertex .)
    -               reduce using rule 52 (steps -> steps edge vertex .)
    <               reduce using rule 52 (steps -> steps edge vertex .)


state 94

    (30) map_items -> map_items , LABEL : expr .

    }               reduce using rule 30 (map_items -> map_items , LABEL : expr .)
    ,               reduce using rule 30 (map_items -> map_items , LABEL : expr .)


state 95

    (31) map_items -> map_items , STRING : expr .

    }               reduce using rule 31 (map_items -> map_items , STRING : expr .)
    ,               reduce using rule 31 (map_items -> map_items , STRING : expr .)


state 96

    (42) edge_spec -> [ : LABEL edge_rank edge_props . ]

    ]               shift and go to state 99


state 97

    (44) edge_spec -> [ : LABEL STRING - . > STRING edge_rank edge_props ]

    >               shift and go to state 100


state 98

    (43) edge_spec -> [ STRING - > STRING . edge_rank edge_props ]
    (45) edge_rank -> .
    (46) edge_rank -> . @ INT

    {               reduce using rule 45 (edge_rank -> .)
    ]               reduce using rule 45 (edge_rank -> .)
    @               shift and go to state 58

    edge_rank                      shift and go to state 101

state 99

    (42) edge_spec -> [ : LABEL edge_rank edge_props ] .

    -               reduce using rule 42 (edge_spec -> [ : LABEL edge_rank edge_props ] .)


state 100

    (44) edge_spec -> [ : LABEL STRING - > . STRING edge_rank edge_props ]

    STRING          shift and go to state 102


state 101

    (43) edge_spec -> [ STRING - > STRING edge_rank . edge_props ]
    (47) edge_props -> .
    (48) edge_props -> . map
    (26) map -> . { map_items }
    (27) map -> . { }

    ]               reduce using rule 47 (edge_props -> .)
    {               shift and go to state 75

    edge_props                     shift and go to state 103
    map                            shift and go to state 74

state 102

    (44) edge_spec -> [ : LABEL STRING - > STRING . edge_rank edge_props ]
    (45) edge_rank -> .
    (46) edge_rank -> . @ INT

    {               reduce using rule 45 (edge_rank -> .)
    ]               reduce using rule 45 (edge_rank -> .)
    @               shift and go to state 58

    edge_rank                      shift and go to state 104

state 103

    (43) edge_spec -> [ STRING - > STRING edge_rank edge_props . ]

    ]               shift and go to state 105


state 104

    (44) edge_spec -> [ : LABEL STRING - > STRING edge_rank . edge_props ]
    (47) edge_props -> .
    (48) edge_props -> . map
    (26) map -> . { map_items }
    (27) map -> . { }

    ]               reduce using rule 47 (edge_props -> .)
    {               shift and go to state 75

    edge_props                     shift and go to state 106
    map                            shift and go to state 74

state 105

    (43) edge_spec -> [ STRING - > STRING edge_rank edge_props ] .

    -               reduce using rule 43 (edge_spec -> [ STRING - > STRING edge_rank edge_props ] .)


state 106

    (44) edge_spec -> [ : LABEL STRING - > STRING edge_rank edge_props . ]

    ]               shift and go to state 107


state 107

    (44) edge_spec -> [ : LABEL STRING - > STRING edge_rank edge_props ] .

    -               reduce using rule 44 (edge_spec -> [ : LABEL STRING - > STRING edge_rank edge_props ] .)

